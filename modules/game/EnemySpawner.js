/**
 * This code was pregenerated by Claude, given game.jsx, then moderately refactored
 */

// modules/game/EnemySpawner.js
import Enemy from '@modules/game/Enemy';

export class EnemySpawner {
	// Set everything private because they shouldn't be managed outside the class interactions
	#screenHeight;
	#onSpawn;
	#isActive
	#spawnTimeout;

	/**
	 * Manages automatic enemy spawning
	 * @param {Number} screenHeight The screen height 
	 * @param {CallbackFunction} onSpawn Function to call when enemies spawn 
	 */
	constructor(screenHeight, onSpawn) {
		this.#screenHeight = screenHeight;
		this.#onSpawn = onSpawn;
		this.#isActive = false;
		this.#spawnTimeout = null;
	}

	/**
	 * Begin spawning enemies at a random interval
	 */
	start() {
		this.#isActive = true;
		this.#scheduleNext();
	}

	/**
	 * Stop spawning enemies
	 */
	stop() {
		this.#isActive = false;
		if (this.#spawnTimeout) {
			clearTimeout(this.#spawnTimeout);
			this.#spawnTimeout = null;
		}
	}

	/**
	 * Schedule the next enemy-spawning
	 */
	#scheduleNext() {
		if (!this.#isActive) return;

		// Random delay between 1-3 seconds
		const delay = Math.random() * 2000 + 1000;

		this.#spawnTimeout = setTimeout(() => {
			this.#spawn();
			this.#scheduleNext();
		}, delay);
	}

	/**
	 * Spawn an enemy
	 */
	#spawn() {
		const enemy = new Enemy(0, 0);

		const randomY = Math.random() * (this.#screenHeight - enemy.getHeight() * 2);
		enemy.y = randomY;

		if (this.#onSpawn) {
			this.#onSpawn(enemy);
		}
	}
}